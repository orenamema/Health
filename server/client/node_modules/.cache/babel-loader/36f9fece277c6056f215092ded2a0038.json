{"ast":null,"code":"var _jsxFileName = \"/Users/oren/Desktop/employeedirectory/src/components/Datastore.js\";\nimport React from \"react\";\nimport Api from \"../utils/Api\";\nimport Records from \"./Record\";\n\nclass Datastore extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: []\n    };\n\n    this.componentDidMount = () => {\n      let userdata = [];\n      let employeedata = \"\";\n      Api.getusers().then(results => {\n        // console.log (results.data.results)\n        for (let i = 0; i < results.data.results.length; i++) {\n          employeedata = {\n            name: results.data.results[i].name.first,\n            email: results.data.results[i].email,\n            image: results.data.results[i].picture.large,\n            phone: results.data.results[i].phone,\n            DOB: results.data.results[i].dob.date\n          };\n          console.log(employeedata);\n          userdata.push(employeedata);\n        }\n\n        this.setState({\n          employees: userdata\n        }, () => {\n          console.log(this.state.employees);\n        });\n      });\n    };\n  }\n\n  render() {\n    var rec = this.state.employees;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Hello world\"), rec.map((data, i) => React.createElement(Records, {\n      name: data.name,\n      email: data.email,\n      image: data.image,\n      phone: data.phone,\n      DOB: data.DOB,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Datastore;","map":{"version":3,"sources":["/Users/oren/Desktop/employeedirectory/src/components/Datastore.js"],"names":["React","Api","Records","Datastore","Component","state","employees","componentDidMount","userdata","employeedata","getusers","then","results","i","data","length","name","first","email","image","picture","large","phone","DOB","dob","date","console","log","push","setState","render","rec","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,UAApB;;AACA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACZC,MAAAA,SAAS,EAAC;AADE,KAD4B;;AAAA,SAIpCC,iBAJoC,GAIjB,MAAI;AACnB,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,YAAY,GAAG,EAAnB;AACAR,MAAAA,GAAG,CAACS,QAAJ,GAAeC,IAAf,CAAoBC,OAAO,IAAE;AACzB;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBG,MAApC,EAA4CF,CAAC,EAA7C,EAAgD;AAC3CJ,UAAAA,YAAY,GAAE;AACXO,YAAAA,IAAI,EAAEJ,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBC,CAArB,EAAwBG,IAAxB,CAA6BC,KADxB;AAEXC,YAAAA,KAAK,EAAEN,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBC,CAArB,EAAwBK,KAFpB;AAGXC,YAAAA,KAAK,EAAEP,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBC,CAArB,EAAwBO,OAAxB,CAAgCC,KAH5B;AAIXC,YAAAA,KAAK,EAAEV,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBC,CAArB,EAAwBS,KAJpB;AAKXC,YAAAA,GAAG,EAAEX,OAAO,CAACE,IAAR,CAAaF,OAAb,CAAqBC,CAArB,EAAwBW,GAAxB,CAA4BC;AALtB,WAAd;AAODC,UAAAA,OAAO,CAACC,GAAR,CAAalB,YAAb;AACAD,UAAAA,QAAQ,CAACoB,IAAT,CAAcnB,YAAd;AACH;;AACD,aAAKoB,QAAL,CAAc;AACVvB,UAAAA,SAAS,EAACE;AADA,SAAd,EAEE,MAAK;AACPkB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWC,SAAvB;AACC,SAJD;AAKH,OAlBD;AAmBH,KA1BmC;AAAA;;AA2BpCwB,EAAAA,MAAM,GAAE;AACJ,QAAIC,GAAG,GAAG,KAAK1B,KAAL,CAAWC,SAArB;AACA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAKIyB,GAAG,CAACC,GAAJ,CAAQ,CAAClB,IAAD,EAAOD,CAAP,KAEJ,oBAAC,OAAD;AACA,MAAA,IAAI,EAAIC,IAAI,CAACE,IADb;AAEA,MAAA,KAAK,EAAIF,IAAI,CAACI,KAFd;AAGA,MAAA,KAAK,EAAIJ,IAAI,CAACK,KAHd;AAIA,MAAA,KAAK,EAAIL,IAAI,CAACQ,KAJd;AAKA,MAAA,GAAG,EAAIR,IAAI,CAACS,GALZ;AAMA,MAAA,GAAG,EAAEV,CANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,CADQ;AAqBH;;AAlDmC;;AAoDxC,eAAeV,SAAf","sourcesContent":["import React from \"react\";\nimport Api from \"../utils/Api\";\nimport Records from \"./Record\"\nclass Datastore extends React.Component {\n    state = {\nemployees:[]\n    }\n    componentDidMount =()=>{\n        let userdata = []\n        let employeedata = \"\"\n        Api.getusers().then(results=>{\n            // console.log (results.data.results)\n            for(let i=0; i<results.data.results.length; i++){\n                 employeedata= {\n                    name: results.data.results[i].name.first,\n                    email: results.data.results[i].email,\n                    image: results.data.results[i].picture.large,\n                    phone: results.data.results[i].phone,\n                    DOB: results.data.results[i].dob.date,\n                }\n                console.log (employeedata)\n                userdata.push(employeedata)\n            }\n            this.setState({\n                employees:userdata\n            },() =>{ \n            console.log(this.state.employees)\n            })\n        })\n    }\n    render(){\n        var rec = this.state.employees\n        return(\n<div>\n<h1>\n    Hello world\n</h1>\n    \n   {rec.map((data, i) => ( \n\n        <Records\n        name = {data.name}\n        email = {data.email}\n        image = {data.image}\n        phone = {data.phone}\n        DOB = {data.DOB}\n        key={i}\n        />\n\n        ))}\n\n</div>\n        )\n    }\n}\nexport default Datastore;"]},"metadata":{},"sourceType":"module"}